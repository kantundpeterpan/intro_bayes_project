# }
# for (i in 1:7) {
#   autocorr.plot(q7_mcmc_beta[[2]][, i], main = paste("Chain 2: beta[", i, "]"))
# }
knitr::opts_chunk$set(echo = FALSE)
source("./code.R")
plot_priors + ylab('density')
post_summary %>% kbl(
caption = "Posterior distribution parameters and summary measures per geography for the two different Beta priors",
col.names = c(
"Geography", "Insurance",
"$\\alpha$", "$\\beta$", "mean", "mode", "var", "HPD LL", "HPD UL",
"$\\alpha$", "$\\beta$", "mean", "mode", "var", "HPD LL", "HPD UL"
),
digits = 3, linesep = '', escape=F, booktabs = T)  %>%
add_header_above(header = c(
" "=2, "Beta(1,1) prior"=7, "Beta(150,7) prior"=7
)) %>%
add_header_above(header = c(
" "=2, "Posterior parameters and summary measures"=14
)) %>% landscape()
grid.arrange(grobs = plots, ncol = 3)
model_run
# par(mfrow=c(1,3))
# plot(mcmc[,c("pi_private", "pi_medicaid", "pi_uninsured")], trace = T, density = F)
mcmc_trace(mcmc[,alpha_params]) +
legend_move('top') +
theme(axis.text.x = element_text(angle = 45))
ggplot(alpha_plot_df, aes(x = value, color = factor(chain))) +
geom_density() +
labs(x = "Parameter Value", y = "Density",
title = "Posterior Density by Parameter and Chain",
color = "Chain") +
facet_wrap(~ parameter, scales = "free") + # Use facet_wrap on the 'parameter' column
theme_minimal()
mcmc_acf(mcmc[,alpha_params])
gelman.diag(mcmc[,alpha_params])
# gelman.plot(mcmc[,alpha_params])
# par(mfrow=c(1,3))
# gelman.plot(mcmc[,alpha_params[1]])
# gelman.plot(mcmc[,alpha_params[2]])
# gelman.plot(mcmc[,alpha_params[3]])
geweke.diag(mcmc[,alpha_params])
# par(mfrow=c(2,3))
# geweke.plot(mcmc[,alpha_params[1]])
# geweke.plot(mcmc[,alpha_params[2]])
# geweke.plot(mcmc[,alpha_params[3]])
ggplot(alpha_plot_df, aes(x = value)) +
geom_density() +
labs(x = "Parameter Value", y = "Density",
title = "Posterior Density by Parameter") +
facet_wrap(~ parameter, scales = "free") + # Use facet_wrap on the 'parameter' column
theme_minimal()
kbl(alpha_summary, escape = F, booktabs = T) %>%
add_header_above(
header = c("Parameter"=1, "Summary measures"=3, "95% HPD interval"=2)
)
#| label: tbl-q5-post
# cols <- colnames(q5)
# cols[8] = "$\\Delta_{Beta(150,7)}$"
knitr::kable(
q5,
digits = 3,
booktabs = T,
escape=F,
linesep = c('', '', '\\addlinespace'),
label='tbl-q5-post',
caption = 'Posterior estimates of mean vaccine coverages from the logistic regression model vs. estimates from conjugate pair modeling. Subscripts indicate whether the estimates was obtained from logistic regression or the chosen prior distribution, respectively. $\\Delta_{Beta(\\alpha, \\beta)}$ gives the difference between posterior estimates from the logistic regression model and conjugate pair modeling. Vaccine coverage for MS/Medicaid can only be obtained from the logistic regression model.',
format='latex'
) %>% column_spec(2, width="2.5cm")
# grid.arrange(grobs = list(q5_compbeta11_plot, q5_compbetaconf_plot), ncol = 2)
q5_compplot + ylab(TeX("$\\bar\\pi_{logreg} - \\bar\\pi_{\\Beta(\\alpha, \\beta)}$"))
diff_dens_plot
# cat(sprintf("\`\`\`{class.output = }
#   %s\n
#   \`\`\`
# ",
cat(q7_jags_str)
# ))
# gelman_table <- kbl(
#   gelman_table,  # extracting the matrix form
#   digits = 3,
#   format = 'latex',
#   booktabs = TRUE,
#   escape = FALSE,
#   linesep = c('', '', '\\addlinespace'),
#   caption = 'Gelmanâ€“Rubin diagnostic: Point Estimate and Upper 95\\% CI for each parameter.'
# ) %>% column_spec(2, width = "2.5cm")
#
# writeLines(gelman_table, "gelman_q7.tex")
# gelman_table
#
# geweke_latex <- kbl(
#   geweke_table,
#   digits = 3,
#   format = 'latex',
#   booktabs = TRUE,
#   escape = FALSE,
#   linesep = c('', '', '\\addlinespace'),
#   caption = 'Geweke diagnostic $z$-scores for each parameter. Values outside the range $[-2, 2]$ may indicate lack of convergence.'
# ) %>%
#   kable_styling(latex_options = c("hold_position", "striped"))
#
# writeLines(geweke_latex, "geweke_q7.tex")
# geweke_table
# par(mfrow = c(3, 3))
# for (i in 1:7) {
#   traceplot(q7_mcmc_beta[, i], main = paste0("Traceplot: beta[", i, "]"))
# }
# # similar process for the autocorrelation plots per chain
# par(mfrow = c(3, 3))
# for (i in 1:7) {
#   autocorr.plot(q7_mcmc_beta[[1]][, i], main = paste("Chain 1: beta[", i, "]"))
# }
# for (i in 1:7) {
#   autocorr.plot(q7_mcmc_beta[[2]][, i], main = paste("Chain 2: beta[", i, "]"))
# }
mcmc_trace(mcmc[,beta_params]) +
legend_move('top') +
theme(axis.text.x = element_text(angle = 45))
mcmc_trace(q7_mcmc[,beta_params]) +
legend_move('top') +
theme(axis.text.x = element_text(angle = 45))
mcmc_trace(q7_mcmc[,beta_params]) +
legend_move('top') +
theme(axis.text.x = element_text(angle = 45))
ggplot(beta_plot_df, aes(x = value, color = factor(chain))) +
geom_density() +
facet_wrap(~ parameter, scales = "free") +
labs(x = "Parameter Value", y = "Density", color = "Chain",
title = "Posterior Density by Parameter and Chain") +
theme_minimal()
mcmc_acf(q7_mcmc[, beta_params]) +
ggtitle("Autocorrelation of beta parameters")
gelman.diag(q7_mcmc[, beta_params])
geweke.diag(q7_mcmc[, beta_params])
gelman_q7 <- kbl(
gelman_table,
digits = 3,
format = "latex",
booktabs = T,
caption = "$\\hat{R}$ diagnostics for beta parameters (Gelman-Rubin)."
) %>% column_spec(2, width = "2.5cm")
knitr::opts_chunk$set(echo = FALSE)
source("./code.R")
plot_priors + ylab('density')
post_summary %>% kbl(
caption = "Posterior distribution parameters and summary measures per geography for the two different Beta priors",
col.names = c(
"Geography", "Insurance",
"$\\alpha$", "$\\beta$", "mean", "mode", "var", "HPD LL", "HPD UL",
"$\\alpha$", "$\\beta$", "mean", "mode", "var", "HPD LL", "HPD UL"
),
digits = 3, linesep = '', escape=F, booktabs = T)  %>%
add_header_above(header = c(
" "=2, "Beta(1,1) prior"=7, "Beta(150,7) prior"=7
)) %>%
add_header_above(header = c(
" "=2, "Posterior parameters and summary measures"=14
)) %>% landscape()
grid.arrange(grobs = plots, ncol = 3)
model_run
# par(mfrow=c(1,3))
# plot(mcmc[,c("pi_private", "pi_medicaid", "pi_uninsured")], trace = T, density = F)
mcmc_trace(mcmc[,alpha_params]) +
legend_move('top') +
theme(axis.text.x = element_text(angle = 45))
ggplot(alpha_plot_df, aes(x = value, color = factor(chain))) +
geom_density() +
labs(x = "Parameter Value", y = "Density",
title = "Posterior Density by Parameter and Chain",
color = "Chain") +
facet_wrap(~ parameter, scales = "free") + # Use facet_wrap on the 'parameter' column
theme_minimal()
mcmc_acf(mcmc[,alpha_params])
gelman.diag(mcmc[,alpha_params])
# gelman.plot(mcmc[,alpha_params])
# par(mfrow=c(1,3))
# gelman.plot(mcmc[,alpha_params[1]])
# gelman.plot(mcmc[,alpha_params[2]])
# gelman.plot(mcmc[,alpha_params[3]])
geweke.diag(mcmc[,alpha_params])
# par(mfrow=c(2,3))
# geweke.plot(mcmc[,alpha_params[1]])
# geweke.plot(mcmc[,alpha_params[2]])
# geweke.plot(mcmc[,alpha_params[3]])
ggplot(alpha_plot_df, aes(x = value)) +
geom_density() +
labs(x = "Parameter Value", y = "Density",
title = "Posterior Density by Parameter") +
facet_wrap(~ parameter, scales = "free") + # Use facet_wrap on the 'parameter' column
theme_minimal()
kbl(alpha_summary, escape = F, booktabs = T) %>%
add_header_above(
header = c("Parameter"=1, "Summary measures"=3, "95% HPD interval"=2)
)
#| label: tbl-q5-post
# cols <- colnames(q5)
# cols[8] = "$\\Delta_{Beta(150,7)}$"
knitr::kable(
q5,
digits = 3,
booktabs = T,
escape=F,
linesep = c('', '', '\\addlinespace'),
label='tbl-q5-post',
caption = 'Posterior estimates of mean vaccine coverages from the logistic regression model vs. estimates from conjugate pair modeling. Subscripts indicate whether the estimates was obtained from logistic regression or the chosen prior distribution, respectively. $\\Delta_{Beta(\\alpha, \\beta)}$ gives the difference between posterior estimates from the logistic regression model and conjugate pair modeling. Vaccine coverage for MS/Medicaid can only be obtained from the logistic regression model.',
format='latex'
) %>% column_spec(2, width="2.5cm")
# grid.arrange(grobs = list(q5_compbeta11_plot, q5_compbetaconf_plot), ncol = 2)
q5_compplot + ylab(TeX("$\\bar\\pi_{logreg} - \\bar\\pi_{\\Beta(\\alpha, \\beta)}$"))
diff_dens_plot
# cat(sprintf("\`\`\`{class.output = }
#   %s\n
#   \`\`\`
# ",
cat(q7_jags_str)
# ))
mcmc_trace(q7_mcmc[,beta_params]) +
legend_move('top') +
theme(axis.text.x = element_text(angle = 45))
ggplot(beta_plot_df, aes(x = value, color = factor(chain))) +
geom_density() +
facet_wrap(~ parameter, scales = "free") +
labs(x = "Parameter Value", y = "Density", color = "Chain",
title = "Posterior Density by Parameter and Chain") +
theme_minimal()
mcmc_acf(q7_mcmc[, beta_params]) +
ggtitle("Autocorrelation of beta parameters")
gelman_q7 <- kbl(
gelman_table,
digits = 3,
format = "latex",
booktabs = T,
caption = "$\\hat{R}$ diagnostics for beta parameters (Gelman-Rubin)."
) %>% column_spec(2, width = "2.5cm")
writeLines(gelman_q7, "gelman_q7.tex")
gelman_q7
knitr::opts_chunk$set(echo = FALSE)
source("./code.R")
nrow(geweke_table)
str(geweke_result)
geweke_result[[1]]$z
geweke_result[[2]]$z
knitr::opts_chunk$set(echo = FALSE)
source("./code.R")
plot_priors + ylab('density')
post_summary %>% kbl(
caption = "Posterior distribution parameters and summary measures per geography for the two different Beta priors",
col.names = c(
"Geography", "Insurance",
"$\\alpha$", "$\\beta$", "mean", "mode", "var", "HPD LL", "HPD UL",
"$\\alpha$", "$\\beta$", "mean", "mode", "var", "HPD LL", "HPD UL"
),
digits = 3, linesep = '', escape=F, booktabs = T)  %>%
add_header_above(header = c(
" "=2, "Beta(1,1) prior"=7, "Beta(150,7) prior"=7
)) %>%
add_header_above(header = c(
" "=2, "Posterior parameters and summary measures"=14
)) %>% landscape()
grid.arrange(grobs = plots, ncol = 3)
model_run
# par(mfrow=c(1,3))
# plot(mcmc[,c("pi_private", "pi_medicaid", "pi_uninsured")], trace = T, density = F)
mcmc_trace(mcmc[,alpha_params]) +
legend_move('top') +
theme(axis.text.x = element_text(angle = 45))
ggplot(alpha_plot_df, aes(x = value, color = factor(chain))) +
geom_density() +
labs(x = "Parameter Value", y = "Density",
title = "Posterior Density by Parameter and Chain",
color = "Chain") +
facet_wrap(~ parameter, scales = "free") + # Use facet_wrap on the 'parameter' column
theme_minimal()
mcmc_acf(mcmc[,alpha_params])
gelman.diag(mcmc[,alpha_params])
# gelman.plot(mcmc[,alpha_params])
# par(mfrow=c(1,3))
# gelman.plot(mcmc[,alpha_params[1]])
# gelman.plot(mcmc[,alpha_params[2]])
# gelman.plot(mcmc[,alpha_params[3]])
geweke.diag(mcmc[,alpha_params])
# par(mfrow=c(2,3))
# geweke.plot(mcmc[,alpha_params[1]])
# geweke.plot(mcmc[,alpha_params[2]])
# geweke.plot(mcmc[,alpha_params[3]])
ggplot(alpha_plot_df, aes(x = value)) +
geom_density() +
labs(x = "Parameter Value", y = "Density",
title = "Posterior Density by Parameter") +
facet_wrap(~ parameter, scales = "free") + # Use facet_wrap on the 'parameter' column
theme_minimal()
kbl(alpha_summary, escape = F, booktabs = T) %>%
add_header_above(
header = c("Parameter"=1, "Summary measures"=3, "95% HPD interval"=2)
)
#| label: tbl-q5-post
# cols <- colnames(q5)
# cols[8] = "$\\Delta_{Beta(150,7)}$"
knitr::kable(
q5,
digits = 3,
booktabs = T,
escape=F,
linesep = c('', '', '\\addlinespace'),
label='tbl-q5-post',
caption = 'Posterior estimates of mean vaccine coverages from the logistic regression model vs. estimates from conjugate pair modeling. Subscripts indicate whether the estimates was obtained from logistic regression or the chosen prior distribution, respectively. $\\Delta_{Beta(\\alpha, \\beta)}$ gives the difference between posterior estimates from the logistic regression model and conjugate pair modeling. Vaccine coverage for MS/Medicaid can only be obtained from the logistic regression model.',
format='latex'
) %>% column_spec(2, width="2.5cm")
# grid.arrange(grobs = list(q5_compbeta11_plot, q5_compbetaconf_plot), ncol = 2)
q5_compplot + ylab(TeX("$\\bar\\pi_{logreg} - \\bar\\pi_{\\Beta(\\alpha, \\beta)}$"))
diff_dens_plot
# cat(sprintf("\`\`\`{class.output = }
#   %s\n
#   \`\`\`
# ",
cat(q7_jags_str)
# ))
mcmc_trace(q7_mcmc[,beta_params]) +
legend_move('top') +
theme(axis.text.x = element_text(angle = 45))
ggplot(beta_plot_df, aes(x = value, color = factor(chain))) +
geom_density() +
facet_wrap(~ parameter, scales = "free") +
labs(x = "Parameter Value", y = "Density", color = "Chain",
title = "Posterior Density by Parameter and Chain") +
theme_minimal()
mcmc_acf(q7_mcmc[, beta_params]) +
ggtitle("Autocorrelation of beta parameters")
gelman_q7 <- kbl(
gelman_table,
digits = 3,
format = "latex",
booktabs = T,
caption = "$\\hat{R}$ diagnostics for beta parameters (Gelman-Rubin)."
) %>% column_spec(2, width = "2.5cm")
writeLines(gelman_q7, "gelman_q7.tex")
gelman_q7
geweke_q7 <- kbl(
geweke_table,
digits = 3,
format = "latex",
booktabs = T,
caption = "$Geweke $z$-scores for beta parameters. Values outside $[-2, 2]$ may indicate lack of convergence."
) %>% column_spec(2, width = "2.5cm")
writeLines(geweke_q7, "geweke_q7.tex")
geweke_q7
knitr::opts_chunk$set(echo = FALSE)
source("./code.R")
plot_priors + ylab('density')
post_summary %>% kbl(
caption = "Posterior distribution parameters and summary measures per geography for the two different Beta priors",
col.names = c(
"Geography", "Insurance",
"$\\alpha$", "$\\beta$", "mean", "mode", "var", "HPD LL", "HPD UL",
"$\\alpha$", "$\\beta$", "mean", "mode", "var", "HPD LL", "HPD UL"
),
digits = 3, linesep = '', escape=F, booktabs = T)  %>%
add_header_above(header = c(
" "=2, "Beta(1,1) prior"=7, "Beta(150,7) prior"=7
)) %>%
add_header_above(header = c(
" "=2, "Posterior parameters and summary measures"=14
)) %>% landscape()
grid.arrange(grobs = plots, ncol = 3)
model_run
# par(mfrow=c(1,3))
# plot(mcmc[,c("pi_private", "pi_medicaid", "pi_uninsured")], trace = T, density = F)
mcmc_trace(mcmc[,alpha_params]) +
legend_move('top') +
theme(axis.text.x = element_text(angle = 45))
ggplot(alpha_plot_df, aes(x = value, color = factor(chain))) +
geom_density() +
labs(x = "Parameter Value", y = "Density",
title = "Posterior Density by Parameter and Chain",
color = "Chain") +
facet_wrap(~ parameter, scales = "free") + # Use facet_wrap on the 'parameter' column
theme_minimal()
mcmc_acf(mcmc[,alpha_params])
gelman.diag(mcmc[,alpha_params])
# gelman.plot(mcmc[,alpha_params])
# par(mfrow=c(1,3))
# gelman.plot(mcmc[,alpha_params[1]])
# gelman.plot(mcmc[,alpha_params[2]])
# gelman.plot(mcmc[,alpha_params[3]])
geweke.diag(mcmc[,alpha_params])
# par(mfrow=c(2,3))
# geweke.plot(mcmc[,alpha_params[1]])
# geweke.plot(mcmc[,alpha_params[2]])
# geweke.plot(mcmc[,alpha_params[3]])
ggplot(alpha_plot_df, aes(x = value)) +
geom_density() +
labs(x = "Parameter Value", y = "Density",
title = "Posterior Density by Parameter") +
facet_wrap(~ parameter, scales = "free") + # Use facet_wrap on the 'parameter' column
theme_minimal()
kbl(alpha_summary, escape = F, booktabs = T) %>%
add_header_above(
header = c("Parameter"=1, "Summary measures"=3, "95% HPD interval"=2)
)
#| label: tbl-q5-post
# cols <- colnames(q5)
# cols[8] = "$\\Delta_{Beta(150,7)}$"
knitr::kable(
q5,
digits = 3,
booktabs = T,
escape=F,
linesep = c('', '', '\\addlinespace'),
label='tbl-q5-post',
caption = 'Posterior estimates of mean vaccine coverages from the logistic regression model vs. estimates from conjugate pair modeling. Subscripts indicate whether the estimates was obtained from logistic regression or the chosen prior distribution, respectively. $\\Delta_{Beta(\\alpha, \\beta)}$ gives the difference between posterior estimates from the logistic regression model and conjugate pair modeling. Vaccine coverage for MS/Medicaid can only be obtained from the logistic regression model.',
format='latex'
) %>% column_spec(2, width="2.5cm")
# grid.arrange(grobs = list(q5_compbeta11_plot, q5_compbetaconf_plot), ncol = 2)
q5_compplot + ylab(TeX("$\\bar\\pi_{logreg} - \\bar\\pi_{\\Beta(\\alpha, \\beta)}$"))
diff_dens_plot
# cat(sprintf("\`\`\`{class.output = }
#   %s\n
#   \`\`\`
# ",
cat(q7_jags_str)
# ))
# cols <- colnames(q5)
# cols[8] = "$\\Delta_{Beta(150,7)}$"
latex_table <- kbl(
q7,
digits = 3,
format = 'latex',
booktabs = T,
escape = F,
linesep = c('', '', '\\addlinespace'),
#caption = 'Posterior estimates of mean vaccine coverage obtained from a logistic regression model with region-specific intercepts compared to estimates from conjugate prior modeling. Subscripts indicate whether the estimate was derived from the logistic regression model or from a specified prior distribution. $\\Delta_{Beta(\\alpha, \\beta)}$ gives the difference between the logistic regression posterior and the corresponding conjugate prior posterior. Vaccine coverage for MS/Medicaid is only available from the logistic regression model.'
) %>% column_spec(2, width = "2.5cm")
#writeLines(latex_table, "output_q7.tex")
latex_table
# grid.arrange(grobs = list(q5_compbeta11_plot, q5_compbetaconf_plot), ncol = 2)
q7_compplot + ylab(TeX("$\\bar\\pi_{logreg} - \\bar\\pi_{\\Beta(\\alpha, \\beta)}$"))
mcmc_trace(q7_mcmc[,beta_params]) +
legend_move('top') +
theme(axis.text.x = element_text(angle = 45))
ggplot(beta_plot_df, aes(x = value, color = factor(chain))) +
geom_density() +
facet_wrap(~ parameter, scales = "free") +
labs(x = "Parameter Value", y = "Density", color = "Chain",
title = "Posterior Density by Parameter and Chain") +
theme_minimal()
mcmc_acf(q7_mcmc[, beta_params]) +
ggtitle("Autocorrelation of beta parameters")
gelman_q7 <- kbl(
gelman_table,
digits = 3,
format = "latex",
booktabs = T,
caption = "$\\hat{R}$ diagnostics for beta parameters (Gelman-Rubin)."
) %>% column_spec(2, width = "2.5cm")
#writeLines(gelman_q7, "gelman_q7.tex")
gelman_q7
geweke_q7 <- kbl(
geweke_table,
digits = 3,
format = "latex",
booktabs = T,
caption = "$Geweke $z$-scores for beta parameters. Values outside $[-2, 2]$ may indicate lack of convergence."
) %>% column_spec(2, width = "2.5cm")
#writeLines(geweke_q7, "geweke_q7.tex")
geweke_q7
q8_summary %>% kbl(
digits = 3,
caption = 'Posterior summary measures of the ratio of the vaccine coverage in a given Geography/Insurance group stratum compared to the corresponding Insurance group in North Carolina',
) %>% add_header_above(
header = c(" "=2, "Summary measures"=3, "95% HPD interval"=2)
)
ridge_plot
# Create combined labels and order by mean values
posterior_df <- q7_post_summary %>%
mutate(Label = paste(Geography, "-", Insurance)) %>%
arrange(desc(Mean)) # Sort by mean in descending order
# Add row number for visualization
posterior_df$row_id <- 1:nrow(posterior_df)
# Create the caterpillar plot
ggplot(posterior_df, aes(x = Mean, y = reorder(Label, Mean), color = Insurance)) +
geom_point(size = 3) +
geom_errorbarh(aes(xmin = LL, xmax = UL), height = 0.2) +
labs(
title = "Caterpillar Plot of Posterior Means \n with Credible Intervals",
subtitle = "Ordered by posterior mean values",
x = "Posterior Mean",
y = ""
) +
theme_minimal() +
theme(
panel.grid.minor = element_blank(),
panel.grid.major.y = element_blank(),
axis.text.y = element_text(hjust = 0)
) +
scale_color_brewer(palette = "Set1") +
geom_vline(xintercept = mean(posterior_df$Mean), linetype = "dashed",
color = "gray50", alpha = 0.7)
knitr::kable(
q10_final,
caption = q10_tbl_cap
)  %>% add_header_above(
header = c("Summary measures"=3, "95% HPD interval"=2)
)
q10_ppddf %>%
ggplot(aes(x = value)) +
geom_histogram(bins = 22, aes(y = ..density..),
color = 'black', fill = 'white') +
geom_density() +
theme_minimal() +
xlab(TeX("$\\Y^{(s)}$"))
